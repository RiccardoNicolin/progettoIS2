openapi: 3.0.0
info:
  version: '1.0'
  title: "Assignments OpenAPI 3.0"
  description: API for managing the tv series website
  license:
    name: MIT
servers:
  - url: https://secret-retreat-87773.herokuapp.com/
    description: Heroku
  - url: http://localhost:3000/
    description: Localhost
paths:
  /signup:
    post:
      description: >-
        Creates a new user in the system.
      summary: Create a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: 'User created'
          #potremmo metterci l'header alla prossima locazione
  /home:
    get:
      description: home page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Home'
  /home/userlist:
    get:
      description: get all users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /series:
    post:
      description: >-
        Creates a new serie in the system.
      summary: Create a new serie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Serie'
      responses:
        '201':
          description: 'serie created.'
          #potremmo metterci l'header alla prossima locazione
    get:
      description: 'get all the series'
      parameters:
        - in: query
          name: year
          schema:
            type: string
          description: 'year of production'
        - in: query
          name: score
          schema:
            type: integer
          description: 'score of the show'
        - in: query
          name: title
          schema: 
            type: string
          description: 'partial or total name of the show'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Serie'
  /serie/{name}:
    get:
      description: 'get a particular serie'
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: 'name of the requested show'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref= '#/components/schemas/Serie'
    post:
      description: 'post a comment'
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: 'name of the serie you want to comment'
      requestBody:
          content:
            application/json:
              schema:
                $ref= '#/components/schemas/Comments'
      responses:
        '201':
          description: 'comments created.'
          #potremmo metterci l'header alla prossima locazione
    patch:
      description: 'update a particular show'
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: 'name of the requested show'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Serie'
      responses:
        '200':
          description: 'serie updated'
          #potremmo metterci l'header alla prossima locazione
components:
  schemas:
    User:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          description: 'Username of the user'
        email:
          type: string
          description: 'Email address of the user'
        password:
          type: string
          description: 'Hashed password of the user'
    Serie:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: 'name of the show'
        poster:
          type: string
          format: byte
          description: 'poster of the show'
        genre:
          type: array
          items: 
            type: string
          description: 'genere e tag della serie'
        score:
          type: integer
          description: 'score della serie'
        actors:
          type: array
          items:
            type: string
          description: 'actors of the serie'
    Home:
      type: object
      required:
        - serieshot
        - seriesnew
      properties:
        serieshot:
          type: array
          items:
            $ref: '#/components/schemas/Serie'
          description: 'hot series'
        seriesnew:
          type: array
          items:
            $ref: '#/components/schemas/Serie'
          description: 'new series'
    Comments:
      type: object
      required:
        - poster
        - comment
      properties:
        poster:
          type: string
          description: 'name of the poster of the comment'
        comment:
          type: string
          description: 'the body of the comment'